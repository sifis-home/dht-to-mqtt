name: dht-to-mqtt-ubuntu

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  clippy-rustfmt:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install protobuf compiler
      run: |
        sudo apt-get update
        sudo apt-get install protobuf-compiler

    - name: Install Rust stable
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: clippy, rustfmt

    - name: Run rustfmt
      run:
        cargo fmt --all -- --check --verbose

    - name: Run cargo clippy
      uses: giraffate/clippy-action@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        clippy_flags: --all-targets -- -D warnings
        reporter: github-pr-review

  build-test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install protobuf compiler
      run: |
        sudo apt-get update
        sudo apt-get install protobuf-compiler

    - name: Install Rust stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Build
      run: cargo build --verbose --tests --benches

    - name: Run tests
      run: cargo test --verbose

    - name: Generate docs
      run: cargo doc --no-deps

  static-code-analysis:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install protobuf compiler
      run: |
        sudo apt-get update
        sudo apt-get install protobuf-compiler

    - name: Install rust-code-analysis
      env:
        RCA_LINK: https://github.com/mozilla/rust-code-analysis/releases/download
        RCA_VERSION: v0.0.23
      run: |
        mkdir -p $HOME/.local/bin
        curl -L "$RCA_LINK/$RCA_VERSION/rust-code-analysis-linux-cli-x86_64.tar.gz" |
        tar xz -C $HOME/.local/bin
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Run rust-code-analysis
      run: |
        mkdir $HOME/rca-json
        # FIXME: Update rca version to analyze the entire directory of a repo
        rust-code-analysis-cli --metrics -O json --pr -o "$HOME/rca-json" -p src/

    - name: Upload rust-code-analysis json
      uses: actions/upload-artifact@v3
      with:
        name: rca-json-ubuntu
        path: ~/rca-json

  dependency-check:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install protobuf compiler
      run: |
        sudo apt-get update
        sudo apt-get install protobuf-compiler

    - name: Install stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Install nightly
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly

    - name: Install cargo-udeps
      env:
        UDEPS_LINK: https://github.com/est31/cargo-udeps/releases/download
        UDEPS_VERSION: v0.1.35
      run: |
        curl -L "$UDEPS_LINK/$UDEPS_VERSION/cargo-udeps-$UDEPS_VERSION-x86_64-unknown-linux-gnu.tar.gz" |
        tar xz -C $HOME/.cargo/bin --strip-components 2

    - name: Install cargo-deny
      env:
        DENY_LINK: https://github.com/EmbarkStudios/cargo-deny/releases/download
        DENY_VERSION: 0.12.0
      run: |
        curl -L "$DENY_LINK/$DENY_VERSION/cargo-deny-$DENY_VERSION-x86_64-unknown-linux-musl.tar.gz" |
        tar xz -C $HOME/.cargo/bin --strip-components 1

    - name: Install cargo-audit
      env:
        AUDIT_LINK: https://github.com/rustsec/rustsec/releases/download/cargo-audit%2F
        AUDIT_VERSION: v0.16.0
      run: |
        curl -L "$AUDIT_LINK$AUDIT_VERSION/cargo-audit-x86_64-unknown-linux-musl-$AUDIT_VERSION.tgz" |
        tar xzv -C $HOME/.cargo/bin --strip-components 1

    - name: Run cargo-udeps
      run: |
        cargo +nightly udeps --all-targets

    - name: Run cargo-deny
      run: |
        cargo deny init
        cargo deny check bans
        # cargo deny check licenses

    - name: Run cargo-audit
      run: |
        cargo audit
